Transform: AWS::Serverless-2016-10-31
Resources:
  notifications:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: processing_status
          AttributeType: S
        - AttributeName: created
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-notifications
      GlobalSecondaryIndexes:
        - IndexName: processing-status-index
          KeySchema:
            - AttributeName: processing_status
              KeyType: HASH
            - AttributeName: created
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
    Metadata:
      StackeryName: Notifications
  processnotifications:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-processnotifications
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: process-notifications
      CodeUri: src
      Handler: notification_process.process_notifications
      Runtime: python3.7
      MemorySize: !Ref EnvConfiglambdamemorysizeAsString
      Timeout: !Ref EnvConfiglambdatimeoutAsString
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - AWSLambdaENIManagementAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref notifications
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${EnvironmentTagName}/*
        - DynamoDBCrudPolicy:
            TableName: !Ref tokens
      Environment:
        Variables:
          TABLE_NAME: !Ref notifications
          TABLE_ARN: !GetAtt notifications.Arn
          SECRETS_NAMESPACE: !Sub /${EnvironmentTagName}/
          TABLE_NAME_2: !Ref tokens
          TABLE_ARN_2: !GetAtt tokens.Arn
      Events:
        Timer9:
          Type: Schedule
          Properties:
            Schedule: rate(5 minutes)
          Metadata:
            StackeryName: timer-process-notifications
    Metadata:
      StackeryName: process-notifications
  tokens:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-tokens
    Metadata:
      StackeryName: Tokens
  RaiseError:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-RaiseError
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: RaiseError
      CodeUri: src
      Handler: misc.raise_error
      Runtime: python3.7
      MemorySize: !Ref EnvConfiglambdamemorysizeAsString
      Timeout: !Ref EnvConfiglambdatimeoutAsString
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${EnvironmentTagName}/*
      Environment:
        Variables:
          SECRETS_NAMESPACE: !Sub /${EnvironmentTagName}/
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvConfiglambdamemorysizeAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/lambda/memory-size
  EnvConfiglambdatimeoutAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/lambda/timeout
Metadata:
  EnvConfigParameters:
    EnvConfiglambdamemorysizeAsString: lambda.memory-size
    EnvConfiglambdatimeoutAsString: lambda.timeout